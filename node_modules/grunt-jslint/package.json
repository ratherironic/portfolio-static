{
  "name": "grunt-jslint",
  "description": "Validates JavaScript files with JSLint",
  "version": "0.2.5",
  "homepage": "https://github.com/stephenmathieson/grunt-jslint",
  "author": {
    "name": "Stephen Mathieson",
    "email": "me@stephenmathieson.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stephenmathieson/grunt-jslint.git"
  },
  "bugs": {
    "url": "https://github.com/stephenmathieson/grunt-jslint/issues"
  },
  "licenses": [
    {
      "type": "WTFPL",
      "url": "https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-jslint": "bin/grunt-jslint"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "grunt": "~0.4.0"
  },
  "devDependencies": {
    "vows": "*",
    "xml2js": "*"
  },
  "keywords": [
    "gruntplugin",
    "jslint",
    "lint",
    "code quality"
  ],
  "readme": "# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>jslintXml</b> - A String/filepath option which, when provided, tells the plugin where to write a JSLint-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>failOnError</b> - A Boolean option - defaults to <code>true</code>; when set to <code>false</code>, grunt will not fail if JSLint detects an error.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>checkstyle</b> - A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>shebang</b> - Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\t\t\t</li>\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\tjslintXml: 'out/jslint_xml.xml',\n\t\t\t\terrorsOnly: true, // only display errors\n\t\t\t\tfailOnError: false, // defaults to true\n\t\t\t\tshebang: true, // ignore shebang lines\n\t\t\t\tcheckstyle: 'out/checkstyle.xml' // write a checkstyle-XML\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `./test.sh` in the root of your repository.\n\n## TODOs\n\n- better test coverage\n- test-runner for Windows\n\n## Release History\n\n\n### 0.2.5\n\n- Fixed `failOnError` bug (@glan)\n- Fixed JSLint XML bug (@glan)\n- Another grunt 0.4.x support bug (@glan)\n- Bug fix for XML reports (non-escaped characters)\n- Added checkstyle XML reporting\n- Added `shebang` option\n- Improved test coverage\n\n### 0.2.4\n\n- Re-factor everything, allowing for a test suite to be created\n- Updated the outputted JUnit-style XML for better intergration with Jenkins per @sbrandwoo\n- Removed unecessary dependencies\n\n### 0.2.3-1\n\n- Fix for bad template processing; thanks to @sbrandwoo\n\n### 0.2.3\n\n- Adding support for Grunt *0.4.x* by using [underscore's templating engine](http://underscorejs.org/#template), rather than Grunt's version of it\n- Updated JSLint to edition **2012-12-04**\n\n### 0.2.2-1\n\n- Updating JSLint to \"edition\" **2012-11-17**\n\n### 0.2.2\n\n- Adding option to not cause Grunt to fail if a violation is detected\n\n### 0.2.1\n\n- Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n\n### 0.2.0\n\n- Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n\n### 0.1.8\n\n- Updating README.md to contain more verbose documentation\n- Adding keywords to package.json\n\n### 0.1.7\n\n- Added an option to only report on errors\n\n### 0.1.6\n\n- Added an exclude option\n- Added number of files in violation to standard output\n\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-jslint@0.2.5",
  "_from": "grunt-jslint@>= 0.1.0"
}
