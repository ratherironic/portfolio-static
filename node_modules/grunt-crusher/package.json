{
  "name": "grunt-crusher",
  "description": "A grunt plugin that will straight-up crush some images.",
  "version": "0.1.14",
  "homepage": "https://github.com/gcpantazis/grunt-crusher",
  "author": {
    "name": "George Pantazis",
    "email": "gcpantazis@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gcpantazis/grunt-crusher.git"
  },
  "bugs": {
    "url": "https://github.com/gcpantazis/grunt-crusher/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gcpantazis/grunt-crusher/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "underscore": ">=1.3.0"
  },
  "devDependencies": {},
  "keywords": [
    "gruntplugin"
  ],
  "readme": "#grunt-crusher\n\nA grunt plugin for processing images.\n\n##How to use\n\n* Install with: ```npm install grunt-crusher```.\n* Call ```grunt.loadNpmTasks('grunt-crusher')``` in grunt.js\n\n* In your grunt.js config:\n\n\t```\n\tcrusher: {\n\t\ttaskOne: {\n\t\t\timageDirectory: '/path/to/images/',\n\t\t\tfiles: [\n\t\t\t\t'/path/to/images/foo-*.png',\n\t\t\t],\n\t\t\tcrusherTasks: {\n\t\t\t\tpngquant: {\n\t\t\t\t\tbinLocation: './bin/pngquant'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttaskTwo: {\n\t\t\timageDirectory: '/path/to/images/',\n\t\t\tfiles: [\n\t\t\t\t'/path/to/images/foo/*.png',\n\t\t\t\t'/path/to/images/bar/*.png',\n\t\t\t\t'/path/to/images/baz/*.png'\n\t\t\t],\n\t\t\tdestination: IMAGES + '/optimized',\n\t\t\tkeepDirectoryStructure: true,\n\t\t\tcrusherTasks: {\n\t\t\t\tpngquant: {\n\t\t\t\t\tbinLocation: './bin/pngquant'\n\t\t\t\t},\n\t\t\t\tpngout: {\n\t\t\t\t\tbinLocation: './bin/pngout'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t```\n\n##Settings\n\n`imageDirectory` ***required*** : Used to determine relative filepaths, in case you want to preserve the directory structure in the output folder. Files that aren't within this folder will be rejected.\n\n`files` ***required*** : Array of files / wildcards for crusher to iterate through.\n\n`destination` *optional* : If provided, copies files to the destination directory after optimizations are complete. If omitted, replaces original with optimized file.\n\n`outputSuffix` *optional* : Use to add a suffix onto output filenames (someimage.jpg -> someimage_foo.jpg). Requires `destination`.\n\n`keepDirectoryStructure` *optional* : If omitted or set to false, the destination folder will be flat. If set to true, destination folder will contain the original files' folder structure relative to `imageDirectory`.\n\n`crusherTasks` ***required*** : Configure each bin. (TODO: Add config options in *supported libraries* section once available).\n\n##Supported Libraries\n\n`pngquant`\n\n`pngout`\n\n`convert` : Experimental; I have it configured with a global install that I compile per-machine, which seems to be the way to go with imagemagick. See the tests for usage.\n\n##Changelog\n\nCurrent: v0.1.14\n\nMajor Changes:\n\n* v0.1.12 Added `outputSuffix`.\n* v0.1.10 Added experimental support for `convert`, initially for resize.\n* v0.1.9 Added tests, some refactoring on logging.\n* v0.1.6 Add `imageDirectory` and `keepDirectoryStructure` settings.\n* v0.1.4 Make it so that you have to define the bin locations as part of the task; making it platform independant was too tricky here. `dest` -> `destination` in task settings.\n* v0.1.2 Adding `pngout`, start working on how different bins will operate together.\n* v0.1.1 Add optional destination/export directory.\n* v0.1.0 Initial release.\n\n## License\nCopyright (c) 2012 George Pantazis\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-crusher@0.1.14",
  "_from": "grunt-crusher@>= 0.1.0"
}
